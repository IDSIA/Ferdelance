version: '3.3'

networks:
  ferdelance:

volumes:
  server-data:
  client-1-data:
  client-2-data:
  db-data:

services:

  repository:
    image: idsia.ferdelance.repository
    container_name: repository
    networks:
      - ferdelance
    entrypoint: pypi-server run -p 80 --log-stream stdout /packages

  database:
    image: postgres
    container_name: database
    environment:
      - POSTGRES_USER=${DATABASE_USER?Missing DATABASE_USER for database}
      - POSTGRES_PASSWORD=${DATABASE_PASS?Missing DATABASE_PASS for database}
      - POSTGRES_DB=${DATABASE_SCHEMA?Missing DATABASE_SCHEMA for database}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - ferdelance

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    networks:
      - ferdelance
    command: rabbitmq-server

  redis:
    image: redis
    container_name: redis
    networks:
      - ferdelance
    command: redis-server

  worker: 
    image: idsia.ferdelance.server
    container_name: worker
    environment:
      - DB_HOST=database
      - DB_USER=${DATABASE_USER?Missing DATABASE_USER for worker}
      - DB_PASS=${DATABASE_PASS?Missing DATABASE_PASS for worker}
      - DB_SCHEMA=${DATABASE_SCHEMA?Missing DATABASE_SCHEMA for worker}
      - CELERY_BROKER_URL=pyamqp://rabbitmq/
      - CELERY_BACKEND_URL=redis://redis/
    volumes:
      - server-data:/ferdelance/data
    networks:
      - ferdelance
    command: --target worker
    depends_on:
      - redis
      - rabbitmq

  server: 
    image: idsia.ferdelance.server
    container_name: server
    environment:
      - DB_HOST=database
      - DB_USER=${DATABASE_USER?Missing DATABASE_USER for server}
      - DB_PASS=${DATABASE_PASS?Missing DATABASE_PASS for server}
      - DB_SCHEMA=${DATABASE_SCHEMA?Missing DATABASE_SCHEMA for server}
      - SERVER_MAIN_PASSWORD=${SERVER_MAIN_PASSWORD?Missing SERVER_MAIN_PASSWORD for server}
      - PROJECT_DEFAULT_TOKEN=${PROJECT_ID}
      - CELERY_BROKER_URL=pyamqp://rabbitmq/
      - CELERY_BACKEND_URL=redis://redis/
    volumes:
      - server-data:/ferdelance/storage
    networks:
      - ferdelance
    command: --target server
    depends_on:
      - database
      - worker
      - repository

  client1:
    image: idsia.ferdelance.client
    container_name: client1
    environment:
      - SERVER=http://server:1456
      - REPOSITORY_HOST=repository
    volumes: 
      - client-1-data:/ferdelance/workdir
      - ./conf/config.1.yaml:/ferdelance/config.yaml
      - ./data:/ferdelance/data
    networks:
      - ferdelance
    depends_on:
      - server

  client2:
    image: idsia.ferdelance.client
    container_name: client2
    environment:
      - SERVER=http://server:1456
      - REPOSITORY_HOST=repository
    volumes: 
      - client-2-data:/ferdelance/workdir
      - ./conf/config.2.yaml:/ferdelance/config.yaml
      - ./data:/ferdelance/data
    networks:
      - ferdelance
    depends_on:
      - server

  workbench:
    image: python:3.10
    container_name: workbench
    environment:
      - SERVER=http://server:1456
      - REPOSITORY_HOST=repository
      - PROJECT_ID=${PROJECT_ID}
    volumes:
      - ./tests:/tests
    entrypoint: /tests/init.sh
    networks:
      - ferdelance
    depends_on:
      - server
      - client1
      - client2